version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ihdrs-postgres
    environment:
      POSTGRES_DB: ihdrs_db
      POSTGRES_USER: ihdrs_user
      POSTGRES_PASSWORD: ihdrs_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ihdrs-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ihdrs_user -d ihdrs_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ihdrs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ihdrs-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Python Model Service
  model-service:
    build:
      context: ./ihdrs-model-service
      dockerfile: Dockerfile
    container_name: ihdrs-model-service
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - FLASK_DEBUG=false
    volumes:
      - ./ihdrs-model-service/models:/app/models
      - ./ihdrs-model-service/logs:/app/logs
      - ./ihdrs-model-service/data:/app/data
    networks:
      - ihdrs-network
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import requests; requests.get('http://localhost:5000/ping')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  # Java Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ihdrs-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ihdrs_db
      - SPRING_DATASOURCE_USERNAME=ihdrs_user
      - SPRING_DATASOURCE_PASSWORD=ihdrs_password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - MODEL_SERVICE_BASE_URL=http://model-service:5000
      - JAVA_OPTS=-Xms512m -Xmx1024m
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      model-service:
        condition: service_healthy
    networks:
      - ihdrs-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/api/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

networks:
  ihdrs-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
